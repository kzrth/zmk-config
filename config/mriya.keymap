/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt {
    quick_tap_ms = <200>;
    flavor = "tap-preferred";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp GRAVE  &kp SQT             &kp COMMA       &kp PERIOD     &kp P             &kp Y        &kp F      &kp G              &kp C          &kp R            &kp L                &kp LBKT
  &kp LCTRL  &mt LEFT_COMMAND A  &mt LEFT_ALT O  &mt LCTRL E    &mt LEFT_SHIFT U  &kp I        &kp D      &mt RIGHT_SHIFT H  &mt RCTRL T    &mt RIGHT_ALT N  &mt RIGHT_COMMAND S  &mt RCTRL SQT
  &kp LALT   &kp SEMICOLON       &kp Q           &kp J          &kp K             &kp X        &kp B      &kp M              &kp W          &kp V            &kp Z                &mt RALT BSLH
                                 &tog 5          &mt LCTRL ESC  &lt 2 SPACE       &lt 3 TAB    &lt 4 RET  &lt 1 BACKSPACE    &mt RCTRL DEL  &kp RG(SPACE)
            >;
        };

        lower_layer {
            bindings = <
  &kp UNDER       &kp F1    &kp N7  &kp N8     &kp N9  &kp F5       &kp F6     &kp F7           &kp F8             &kp F9         &kp F10   &kp F11
  &mt LCTRL PLUS  &kp EXCL  &kp N4  &kp N5     &kp N6  &kp PRCNT    &kp CARET  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RCMD  &mt RCTRL MINUS
  &mt LALT EQUAL  &kp N1    &kp N1  &kp N2     &kp N3  &kp N5       &kp N6     &kp N7           &kp N8             &kp N9         &kp N0    &trans
                            &trans  &lt 3 TAB  &trans  &kp N0       &trans     &trans           &lt 3 DEL          &trans
            >;
        };

        raise_layer {
            bindings = <
  &kp KP_NUM       &kp KP_SLASH  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PG_UP  &kp SLCK         &kp PRINTSCREEN
  &mt LCTRL EQUAL  &kp LGUI      &kp LALT   &kp LCTRL  &kp LSHFT  &kp KP_PLUS     &kp C_MUTE    &kp LEFT          &kp UP             &kp DOWN   &kp RIGHT        &mt RCTRL K_APP
  &trans           &kp KP_N0     &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END           &kp DOWN           &kp PG_DN  &kp PAUSE_BREAK  &trans
                                 &trans     &trans     &trans     &lt 3 RET       &lt 3 ESC     &trans            &trans             &trans
            >;
        };

        adjust_layer {
            bindings = <
  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
  &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                             &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };

        layer_4 {
            bindings = <
  &trans  &kp LS(TILDE)  &kp LS(DLLR)   &kp LS(QMARK)  &kp LS(EXCL)    &kp LS(CARET)    &kp GRAVE  &kp EQUAL     &kp LS(PLUS)  &kp MINUS  &trans    &trans
  &trans  &kp MINUS      &kp LBKT       &kp LS(LPAR)   &kp LEFT_BRACE  &kp LS(STAR)     &kp EQUAL  &kp LS(RBRC)  &kp LS(RPAR)  &kp RBKT   &kp FSLH  &trans
  &trans  &kp LS(UNDER)  &kp LS(POUND)  &kp LS(AT)     &kp LS(PRCNT)   &trans           &trans     &kp LS(AMPS)  &kp LS(PIPE)  &kp BSLH   &trans    &trans
                         &trans         &trans         &trans          &trans           &trans     &trans        &trans        &trans
            >;
        };

        layer_5 {
            bindings = <
  &trans  &kp Q  &kp W   &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I      &kp O    &kp P              &kp LBKT
  &trans  &kp A  &kp S   &kp D   &kp F   &kp G     &kp H   &kp J   &kp K      &kp L    &kp SEMI           &kp SQT
  &trans  &kp Z  &kp X   &kp C   &kp V   &kp B     &kp N   &kp M   &kp COMMA  &kp DOT  &kp RIGHT_BRACKET  &kp BSLH
                 &tog 5  &trans  &trans  &trans    &trans  &trans  &trans     &trans
            >;
        };
    };
};
